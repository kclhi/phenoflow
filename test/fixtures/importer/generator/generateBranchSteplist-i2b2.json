{
    "workflow": "cwlVersion: v1.0\nsteps:\n  read-potential-cases-i2b2:\n    run: read-potential-cases-i2b2.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule1\n  lista-terma---secondary:\n    run: lista-terma---secondary.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule2\n      potentialCases:\n        id: potentialCases\n        source: read-potential-cases-i2b2/output\n  lista---secondary:\n    run: lista---secondary.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule3\n      potentialCases:\n        id: potentialCases\n        source: lista-terma---secondary/output\n  listb-following-lista:\n    run: listb-following-lista.cwl\n    out:\n    - output\n    in:\n      inputModule1:\n        id: inputModule1\n        source: inputModule4-1\n      inputModule2:\n        id: inputModule2\n        source: inputModule4-2\n      inputModule3:\n        id: inputModule3\n        source: inputModule4-3\n      inputModule4:\n        id: inputModule4\n        source: inputModule4-4\n      inputModule5:\n        id: inputModule5\n        source: inputModule4-5\n      potentialCases:\n        id: potentialCases\n        source: lista---secondary/output\n  listb-termf---primary:\n    run: listb-termf---primary.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule5\n      potentialCases:\n        id: potentialCases\n        source: listb-following-lista/output\n  listb---primary:\n    run: listb---primary.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule6\n      potentialCases:\n        id: potentialCases\n        source: listb-termf---primary/output\n  output-cases:\n    run: output-cases.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule7\n      potentialCases:\n        id: potentialCases\n        source: listb---primary/output\nclass: Workflow\ninputs:\n  inputModule1:\n    id: inputModule1\n    doc: Js implementation unit\n    type: File\n  inputModule2:\n    id: inputModule2\n    doc: Python implementation unit\n    type: File\n  inputModule3:\n    id: inputModule3\n    doc: Python implementation unit\n    type: File\n  inputModule4-1:\n    id: inputModule4-1\n    doc: Python implementation unit\n    type: File\n  inputModule4-2:\n    id: inputModule4-2\n    doc: Python implementation unit\n    type: File\n  inputModule4-3:\n    id: inputModule4-3\n    doc: Python implementation unit\n    type: File\n  inputModule4-4:\n    id: inputModule4-4\n    doc: Python implementation unit\n    type: File\n  inputModule4-5:\n    id: inputModule4-5\n    doc: Python implementation unit\n    type: File\n  inputModule5:\n    id: inputModule5\n    doc: Python implementation unit\n    type: File\n  inputModule6:\n    id: inputModule6\n    doc: Python implementation unit\n    type: File\n  inputModule7:\n    id: inputModule7\n    doc: Python implementation unit\n    type: File\noutputs:\n  cases:\n    id: cases\n    type: File\n    outputSource: listb---primary/output\n    outputBinding:\n      glob: '*.csv'\nrequirements:\n  SubworkflowFeatureRequirement: {}\n",
    "steps": [
        {
            "name": "read-potential-cases-i2b2",
            "type": "external",
            "workflowId": "4adea150-2d19-11ed-9cdf-85215b3cee2f",
            "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: node\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Read potential cases from i2b2\ninputs:\n- doc: Node implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\noutputs:\n- doc: Initial potential cases, read from i2b2.\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/node:latest\ns:type: external\n",
            "fileName": "read-potential-cases-i2b2.js"
        },
        {
            "name": "lista-terma---secondary",
            "type": "logic",
            "workflowId": "4adea150-2d19-11ed-9cdf-85215b3cee2f",
            "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Identify Lista terma - secondary\ninputs:\n- doc: Python implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\n- doc: Potential cases of Codelist-steplist-branch-A\n  id: potentialCases\n  inputBinding:\n    position: 2\n  type: File\noutputs:\n- doc: Patients with clinical codes indicating Codelist-steplist-branch-A related\n    events in electronic health record.\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/python:latest\ns:type: logic\n",
            "fileName": "lista-terma---secondary.py"
        },
        {
            "name": "lista---secondary",
            "type": "logic",
            "workflowId": "4adea150-2d19-11ed-9cdf-85215b3cee2f",
            "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Identify ListA - secondary\ninputs:\n- doc: Python implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\n- doc: Potential cases of Codelist-steplist-branch-A\n  id: potentialCases\n  inputBinding:\n    position: 2\n  type: File\noutputs:\n- doc: Patients with clinical codes indicating Codelist-steplist-branch-A related\n    events in electronic health record.\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/python:latest\ns:type: logic\n",
            "fileName": "lista---secondary.py"
        },
        {
            "name": "listb-following-lista",
            "type": "logic",
            "workflowId": "4adea150-2d19-11ed-9cdf-85215b3cee2f",
            "content": "cwlVersion: v1.0\nsteps:\n  lista-terma---secondary:\n    run: lista-terma---secondary.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule1\n      potentialCases:\n        id: potentialCases\n        source: potentialCases\n  lista---secondary:\n    run: lista---secondary.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule2\n      potentialCases:\n        id: potentialCases\n        source: lista-terma---secondary/output\n  listb-termf---primary:\n    run: listb-termf---primary.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule3\n      potentialCases:\n        id: potentialCases\n        source: lista---secondary/output\n  listb---primary:\n    run: listb---primary.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule4\n      potentialCases:\n        id: potentialCases\n        source: listb-termf---primary/output\n  output-listb-following-lista-cases:\n    run: output-listb-following-lista-cases.cwl\n    out:\n    - output\n    in:\n      inputModule:\n        id: inputModule\n        source: inputModule5\n      potentialCases:\n        id: potentialCases\n        source: listb---primary/output\nclass: Workflow\ninputs:\n  potentialCases:\n    id: potentialCases\n    doc: Input of potential cases for processing\n    type: File\n  inputModule1:\n    id: inputModule1\n    doc: Python implementation unit\n    type: File\n  inputModule2:\n    id: inputModule2\n    doc: Python implementation unit\n    type: File\n  inputModule3:\n    id: inputModule3\n    doc: Python implementation unit\n    type: File\n  inputModule4:\n    id: inputModule4\n    doc: Python implementation unit\n    type: File\n  inputModule5:\n    id: inputModule5\n    doc: Python implementation unit\n    type: File\noutputs:\n  output:\n    id: output\n    type: File\n    outputSource: listb---primary/output\n    outputBinding:\n      glob: '*.csv'\nrequirements:\n  SubworkflowFeatureRequirement: {}\n",
            "steps": [
                {
                    "name": "lista-terma---secondary",
                    "type": "logic",
                    "workflowId": "4ac796e0-2d19-11ed-9cdf-85215b3cee2f",
                    "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Identify Lista terma - secondary\ninputs:\n- doc: Python implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\n- doc: Potential cases of Codelist steplist branch A\n  id: potentialCases\n  inputBinding:\n    position: 2\n  type: File\noutputs:\n- doc: Patients with clinical codes indicating Codelist steplist branch A related\n    events in electronic health record.\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/python:latest\ns:type: logic\n",
                    "fileName": "lista-terma---secondary.py"
                },
                {
                    "name": "lista---secondary",
                    "type": "logic",
                    "workflowId": "4ac796e0-2d19-11ed-9cdf-85215b3cee2f",
                    "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Identify ListA - secondary\ninputs:\n- doc: Python implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\n- doc: Potential cases of Codelist steplist branch A\n  id: potentialCases\n  inputBinding:\n    position: 2\n  type: File\noutputs:\n- doc: Patients with clinical codes indicating Codelist steplist branch A related\n    events in electronic health record.\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/python:latest\ns:type: logic\n",
                    "fileName": "lista---secondary.py"
                },
                {
                    "name": "listb-termf---primary",
                    "type": "logic",
                    "workflowId": "4ac796e0-2d19-11ed-9cdf-85215b3cee2f",
                    "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Identify Listb termf - primary\ninputs:\n- doc: Python implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\n- doc: Potential cases of Codelist steplist branch A\n  id: potentialCases\n  inputBinding:\n    position: 2\n  type: File\noutputs:\n- doc: Patients with clinical codes indicating Codelist steplist branch A related\n    events in electronic health record.\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/python:latest\ns:type: logic\n",
                    "fileName": "listb-termf---primary.py"
                },
                {
                    "name": "listb---primary",
                    "type": "logic",
                    "workflowId": "4ac796e0-2d19-11ed-9cdf-85215b3cee2f",
                    "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Identify ListB - primary\ninputs:\n- doc: Python implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\n- doc: Potential cases of Codelist steplist branch A\n  id: potentialCases\n  inputBinding:\n    position: 2\n  type: File\noutputs:\n- doc: Patients with clinical codes indicating Codelist steplist branch A related\n    events in electronic health record.\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/python:latest\ns:type: logic\n",
                    "fileName": "listb---primary.py"
                },
                {
                    "name": "output-listb-following-lista-cases",
                    "type": "output",
                    "workflowId": "4ac796e0-2d19-11ed-9cdf-85215b3cee2f",
                    "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Output cases\ninputs:\n- doc: Python implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\n- doc: Potential cases of Codelist steplist branch A\n  id: potentialCases\n  inputBinding:\n    position: 2\n  type: File\noutputs:\n- doc: Output containing patients flagged as having this type of Codelist steplist\n    branch A\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/python:latest\ns:type: output\n",
                    "fileName": "output-listb-following-lista-cases.py"
                }
            ]
        },
        {
            "name": "listb-termf---primary",
            "type": "logic",
            "workflowId": "4adea150-2d19-11ed-9cdf-85215b3cee2f",
            "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Identify Listb termf - primary\ninputs:\n- doc: Python implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\n- doc: Potential cases of Codelist-steplist-branch-A\n  id: potentialCases\n  inputBinding:\n    position: 2\n  type: File\noutputs:\n- doc: Patients with clinical codes indicating Codelist-steplist-branch-A related\n    events in electronic health record.\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/python:latest\ns:type: logic\n",
            "fileName": "listb-termf---primary.py"
        },
        {
            "name": "listb---primary",
            "type": "logic",
            "workflowId": "4adea150-2d19-11ed-9cdf-85215b3cee2f",
            "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Identify ListB - primary\ninputs:\n- doc: Python implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\n- doc: Potential cases of Codelist-steplist-branch-A\n  id: potentialCases\n  inputBinding:\n    position: 2\n  type: File\noutputs:\n- doc: Patients with clinical codes indicating Codelist-steplist-branch-A related\n    events in electronic health record.\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/python:latest\ns:type: logic\n",
            "fileName": "listb---primary.py"
        },
        {
            "name": "output-cases",
            "type": "output",
            "workflowId": "4adea150-2d19-11ed-9cdf-85215b3cee2f",
            "content": "$namespaces:\n  s: http://phenomics.kcl.ac.uk/phenoflow/\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\ndoc: Output cases\ninputs:\n- doc: Python implementation unit\n  id: inputModule\n  inputBinding:\n    position: 1\n  type: File\n- doc: Potential cases of Codelist-steplist-branch-A\n  id: potentialCases\n  inputBinding:\n    position: 2\n  type: File\noutputs:\n- doc: Output containing patients flagged as having this type of Codelist-steplist-branch-A\n  id: output\n  outputBinding:\n    glob: '*.csv'\n  type: File\nrequirements:\n  DockerRequirement:\n    dockerPull: kclhi/python:latest\ns:type: output\n",
            "fileName": "output-cases.py"
        }
    ],
    "workflowInputs": "inputModule1:\n  class: File\n  path: js/read-potential-cases-i2b2.js\ninputModule2:\n  class: File\n  path: python/lista-terma---secondary.py\ninputModule3:\n  class: File\n  path: python/lista---secondary.py\ninputModule4-1:\n  class: File\n  path: python/lista-terma---secondary.py\ninputModule4-2:\n  class: File\n  path: python/lista---secondary.py\ninputModule4-3:\n  class: File\n  path: python/listb-termf---primary.py\ninputModule4-4:\n  class: File\n  path: python/listb---primary.py\ninputModule4-5:\n  class: File\n  path: python/output-listb-following-lista-cases.py\ninputModule5:\n  class: File\n  path: python/listb-termf---primary.py\ninputModule6:\n  class: File\n  path: python/listb---primary.py\ninputModule7:\n  class: File\n  path: python/output-cases.py\n"
}