extends layout

mixin createStep(position, name, doc, type, inputDoc, outputDoc, outputExtension, implementations, children)
  div(id="step" + position, style="text-align: center;")
    div(class="row")
      div(class="col")
        span(class="col highlight")
          | Input
        | #{inputDoc}
        div(class="highlight arrow") &#8675;
    div(class="row")
      div(class="col highlight")
        | Step
    div(class="row step")
      div(class="box col")
        div(style="padding-top: 20px;")
          div
            +conceptIcon(type)
          div(class="name")
            | '#{name}'
          div
            | #{doc}
      div(class="col-1")
      div(class="box col")
        div(style="padding-top: 20px;")
          | Select implementation:
          div
            select(class="implementation", placeholder="about")
              each implementation in implementations
                option(value=implementation.language, selected=true) #{implementation.language}
          div
            a(onclick="showImplementation(" + workflow.id + "," + position + ")" class="a-button")
              | VIEW
    if children
      div(class="row")
        | Switch to:&nbsp;
        each child in children
          a(href="/phenoflow/phenotype/download/" + child.workflowId)
            | #{child.stepName}
          if children.indexOf(child) != children.length-1
            | ,&nbsp;
          else
            | .
    div(class="row")
      div(class="col")
        div(class="highlight arrow") &#8675;
        span(class="col highlight")
          | Output
        | #{outputDoc}
        | (#{outputExtension})

block pageJS
  script.
    function downloadWorkflow() {
      document.getElementById("download").style.display = "none";
      document.getElementById("downloadSpinner").removeAttribute("style")
      let implementationUnits = {};
      for (let step of document.getElementsByClassName("step")) {
        implementationUnits[step.getElementsByClassName("name")[0].innerText.replace(/\'/g, "")] = step.getElementsByClassName("implementation")[0].value;
      }
      var xhr = new XMLHttpRequest();
      xhr.open("POST", "/phenoflow/phenotype/generate/#{workflow.id}", true);
      xhr.setRequestHeader("Content-Type", "application/json");
      xhr.responseType = "blob";
      xhr.onload = function(event) {
        var blob = this.response;
        var contentDispo = this.getResponseHeader("Content-Disposition");
        if (contentDispo) {
          var fileName = contentDispo.match(/filename\*?=['"]?(?:UTF-\d['"]*)?([^;\r\n"']*)['"]?;?/)[1];
          var a = document.createElement("a");
          a.href = window.URL.createObjectURL(blob);
          a.download = fileName;
          a.dispatchEvent(new MouseEvent("click"));
          document.getElementById("download").removeAttribute("style")
          document.getElementById("downloadSpinner").style.display = "none";
        }
      }   
      xhr.send(JSON.stringify({"implementationUnits":implementationUnits}));

      openQuestionnaire();
    
    }
    function showImplementation(workflowId, position) {
      const language = document.getElementById("step" + position).getElementsByClassName("implementation")[0].value;
      window.open("/phenoflow/implementation/" + workflowId + "/" + position + "/" + language);
    }


    function openQuestionnaire(){
      //popup questionnaire window 
      window.open('../questionnaire','winname','directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=no,width=600,height=600,top=100,left=100');
    }


block header
  div
    span #{workflow&&workflow.about?workflow.about:""}&nbsp;
    a(id="download" class="a-button" onclick="downloadWorkflow(); return false;")
      | DOWNLOAD
    span(id="downloadSpinner" class="spinner-border text-info" role="status" style="display:none;")
      span(class="sr-only") Loading...

block content

  div(class="container")
    div(style="padding-top:10px;")
      div(style="text-align: right;")
        | !{userName}
        if verified == true
          a(href=homepage)
            img(src="/phenoflow/images/verified.png" width=30)
      div(id="steps")
        if workflow && workflow.steps && workflow.steps[0]
          each step in workflow.steps
            +createStep(step.position?step.position:"", step.name?step.name:"", step.doc?step.doc:"", step.type?step.type:"", step.inputs[0]&&step.inputs[0].doc?step.inputs[0].doc:"", step.outputs[0]&&step.outputs[0].doc?step.outputs[0].doc:"", step.outputs[0]&&step.outputs[0].extension?step.outputs[0].extension:"", step.implementations, step.children?step.children:"")
        else
          +createStep(1, "", "", "", "", "", "", "", "", "")
